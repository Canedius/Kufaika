import { createDatabaseSnapshot, checkDatabaseIntegrity, addExternalLog } from './external-logging.mjs';

// –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
async function monitorDatabase() {
  console.log('üõ°Ô∏è  –ó–∞–ø—É—Å–∫–∞—î–º–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ D1 –±–∞–∑–∏...\n');
  
  try {
    // 1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ü—ñ–ª—ñ—Å–Ω—ñ—Å—Ç—å
    console.log('1Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ü—ñ–ª—ñ—Å–Ω–æ—Å—Ç—ñ:');
    const integrity = await checkDatabaseIntegrity();
    console.log();
    
    // 2. –°—Ç–≤–æ—Ä—é—î–º–æ –∑–Ω—ñ–º–æ–∫ —è–∫—â–æ –≤—Å–µ –û–ö
    const hasProblems = integrity.some(r => r.status === 'WARNING');
    
    if (!hasProblems) {
      console.log('2Ô∏è‚É£ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞—Ö–∏—Å–Ω–æ–≥–æ –∑–Ω—ñ–º–∫—É:');
      const snapshotFile = await createDatabaseSnapshot('Scheduled monitoring snapshot');
      console.log();
      
      // 3. –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      console.log('3Ô∏è‚É£ –ü–æ—Ç–æ—á–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
      for (const check of integrity) {
        console.log(`  üìä ${check.table}: ${check.count.toLocaleString()} –∑–∞–ø–∏—Å—ñ–≤`);
      }
      
    } else {
      console.log('‚ö†Ô∏è  –í–∏—è–≤–ª–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º–∏ - –∑–Ω—ñ–º–æ–∫ –Ω–µ —Å—Ç–≤–æ—Ä—é—î–º–æ');
      await addExternalLog('MONITORING_ALERT', { 
        alert: 'Integrity check failed',
        problems: integrity.filter(r => r.status === 'WARNING')
      });
    }
    
    console.log('\n‚úÖ –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
    
  } catch (error) {
    console.error('\n‚ùå –ü–æ–º–∏–ª–∫–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É:', error.message);
    await addExternalLog('MONITORING_ERROR', { error: error.message });
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —è–∫—â–æ —Ü–µ –≥–æ–ª–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å
if (import.meta.url === `file://${process.argv[1].replace(/\\/g, '/')}`) {
  monitorDatabase();
}
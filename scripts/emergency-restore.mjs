import { readFileSync, writeFileSync } from 'fs';

console.log('üö® –ï–ö–°–¢–†–ï–ù–ï –í–Ü–î–ù–û–í–õ–ï–ù–ù–Ø –ë–ï–ó DELETE!');

function csvToInsertSQL(csvFile, tableName) {
  console.log(`üìñ –û–±—Ä–æ–±–ª—è—é ${csvFile}...`);
  const csvContent = readFileSync(`../../backups/${csvFile}`, 'utf8');
  const lines = csvContent.trim().split('\n');
  const headers = lines[0].replace(/"/g, '').split(',');
  
  let sql = `-- –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è ${tableName} –ë–ï–ó –≤–∏–¥–∞–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö –¥–∞–Ω–∏—Ö\n\n`;
  
  for (let i = 1; i < lines.length; i++) {
    const values = lines[i].replace(/"/g, '').split(',');
    if (values.length === headers.length && values.every(v => v.trim())) {
      const insertValues = values.map(v => isNaN(v) ? `'${v}'` : v).join(', ');
      sql += `INSERT OR REPLACE INTO ${tableName} (${headers.join(', ')}) VALUES (${insertValues});\n`;
    }
  }
  
  return sql;
}

try {
  // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–≤–Ω–µ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ë–ï–ó DELETE
  let emergencySQL = '-- üö® –ï–ö–°–¢–†–ï–ù–ï –ü–û–í–ù–ï –í–Ü–î–ù–û–í–õ–ï–ù–ù–Ø 4 –ñ–û–í–¢–ù–Ø 2025\n';
  emergencySQL += '-- –ë–ï–ó –í–ò–î–ê–õ–ï–ù–ù–Ø –Ü–°–ù–£–Æ–ß–ò–• –î–ê–ù–ò–•!\n\n';
  
  emergencySQL += csvToInsertSQL('sales-2025-10-04_13-26-50.csv', 'sales');
  emergencySQL += '\n-- –†–æ–∑–¥—ñ–ª—é–≤–∞—á –¥–ª—è inventory\n\n';
  emergencySQL += csvToInsertSQL('inventory_levels-2025-10-04_13-26-50.csv', 'inventory_levels');
  
  // –†–æ–∑–¥—ñ–ª—è—î–º–æ –Ω–∞ —á–∞—Å—Ç–∏–Ω–∏ –ø–æ 300 –∫–æ–º–∞–Ω–¥ (–º–µ–Ω—à–µ –¥–ª—è –Ω–∞–¥—ñ–π–Ω–æ—Å—Ç—ñ)
  const lines = emergencySQL.split('\n');
  const insertLines = lines.filter(line => line.trim().startsWith('INSERT OR REPLACE'));
  
  console.log(`üìä –í—Å—å–æ–≥–æ INSERT –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è: ${insertLines.length}`);
  
  const BATCH_SIZE = 300;
  let fileIndex = 1;
  
  for (let i = 0; i < insertLines.length; i += BATCH_SIZE) {
    const batch = insertLines.slice(i, i + BATCH_SIZE);
    const fileName = `emergency-restore-${String(fileIndex).padStart(2, '0')}.sql`;
    
    let content = `-- üö® –ï–ö–°–¢–†–ï–ù–ï –í–Ü–î–ù–û–í–õ–ï–ù–ù–Ø —á–∞—Å—Ç–∏–Ω–∞ ${fileIndex}\n`;
    content += `-- –ö–æ–º–∞–Ω–¥–∏ ${i + 1} - ${i + batch.length} –∑ ${insertLines.length}\n\n`;
    content += batch.join('\n');
    
    writeFileSync(fileName, content, 'utf8');
    console.log(`‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ ${fileName} (${batch.length} –∫–æ–º–∞–Ω–¥)`);
    
    fileIndex++;
  }
  
  console.log('üéØ –¢–µ–ø–µ—Ä –≤–∏–∫–æ–Ω—É–π—Ç–µ emergency-restore —Ñ–∞–π–ª–∏ –ø–æ —á–µ—Ä–∑—ñ!');
  console.log('‚ö†Ô∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ INSERT OR REPLACE - –¥–∞–Ω—ñ –¥–æ–¥–∞–¥—É—Ç—å—Å—è –±–µ–∑ –≤–∏–¥–∞–ª–µ–Ω–Ω—è!');
  
} catch (error) {
  console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
}
import fs from "node:fs/promises";
import { execSync } from "node:child_process";

console.log('üöÄ –®–≤–∏–¥–∫–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–∏—à–∫—ñ–≤ –≤ D1 –±–∞—Ç—á–∞–º–∏...');

// –ß–∏—Ç–∞—î–º–æ –¥–∞–Ω—ñ
const stocksData = JSON.parse(await fs.readFile('data/latest-stocks.json', 'utf8'));
const foundStocks = stocksData.filter(stock => stock.found);

console.log(`üì¶ –û–Ω–æ–≤–ª—é—î–º–æ ${foundStocks.length} –∑–∞–ø–∏—Å—ñ–≤ –∑ ${stocksData.length}`);

// –°—Ç–≤–æ—Ä—é—î–º–æ SQL –¥–ª—è –≤—Å—ñ—Ö –æ–Ω–æ–≤–ª–µ–Ω—å —Ä–∞–∑–æ–º
const updates = foundStocks.map(stock => 
  `UPDATE inventory_levels SET in_stock = ${stock.in_stock}, in_reserve = ${stock.in_reserve}, updated_at = '${new Date().toISOString()}' WHERE variant_id = (SELECT id FROM product_variants WHERE sku = '${stock.sku}');`
).join(' ');

try {
  console.log('‚è≥ –í–∏–∫–æ–Ω—É—î–º–æ –º–∞—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è...');
  const result = execSync(`wrangler d1 execute hoodie-sales --remote --command "${updates}"`, { encoding: 'utf8' });
  
  console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:', result);
  console.log(`üéâ –£—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ ${foundStocks.length} –∑–∞–ø–∏—Å—ñ–≤ –≤ D1!`);
  
} catch (error) {
  console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –º–∞—Å–æ–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:', error.message);
  
  // Fallback: –æ–Ω–æ–≤–ª—é—î–º–æ –ø–æ –æ–¥–Ω–æ–º—É –∞–ª–µ —à–≤–∏–¥—à–µ
  console.log('üîÑ –ü—Ä–æ–±—É—î–º–æ –æ–Ω–æ–≤–∏—Ç–∏ –ø–æ –æ–¥–Ω–æ–º—É...');
  let updated = 0;
  
  for (const stock of foundStocks.slice(0, 10)) { // –¢—ñ–ª—å–∫–∏ –ø–µ—Ä—à—ñ 10 –¥–ª—è —Ç–µ—Å—Ç—É
    try {
      const updateCommand = `UPDATE inventory_levels SET in_stock = ${stock.in_stock}, in_reserve = ${stock.in_reserve}, updated_at = '${new Date().toISOString()}' WHERE variant_id = (SELECT id FROM product_variants WHERE sku = '${stock.sku}');`;
      
      execSync(`wrangler d1 execute hoodie-sales --remote --command "${updateCommand}"`, { encoding: 'utf8' });
      console.log(`‚úÖ ${stock.sku}: ${stock.in_stock}/${stock.in_reserve}`);
      updated++;
      
    } catch (err) {
      console.error(`‚ùå ${stock.sku}:`, err.message);
    }
  }
  
  console.log(`üìä –û–Ω–æ–≤–ª–µ–Ω–æ ${updated} –∑ ${foundStocks.length} –∑–∞–ø–∏—Å—ñ–≤`);
}